swagger: '2.0'
info:
  description: PromoManger API
  version: 1.0.0
  title: PromoManager API
  contact:
    email: godoy.lucas.e@gmail.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html


# tags are used for organizing operations
tags:
- name: promoCrud
  description: CRUD operations on Promotions
- name: promoManagement
  description: Manages promotions

paths:
  /promo:
    post:
      tags:
      - promoCrud
      summary: creates a new promotion
      operationId: createPromotion
      description: |
        Creates a new promotion with specific features
      produces:
      - application/json
      parameters:
      - in: body
        name: promoBean
        description: object that contains the info to create a new promotion
        schema:
          $ref: '#/definitions/PromoBean'
      responses:
        201:
          description: search results matching criteria
          schema:
            $ref: '#/definitions/PromoBean'
        400:
          description: bad input parameter
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: promoCode already created
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
      - promoCrud
      summary: activates an existing promotion
      operationId: activatePromotion
      description: |
        Activates an existing promotion
      produces:
      - application/json
      parameters:
      - in: body
        name: activatePromoBean
        description: object that contains the info to activate a promotion
        schema:
          $ref: '#/definitions/ActivatePromoBean'
      responses:
        204:
          description: promotion updated with active status
        404:
          description: promotion has not been found
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: promotion is active already
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  PromoBean:
    type: object
    required:
    - name
    - description
    - promoCode
    - businessId
    properties:
      id:
        type: string
      businessId:
        type: string
      name:
        type: string
      description:
        type: string
      promoCode:
        type: string
      begins:
        type: string
        format: date-time
      expires:
        type: string
        format: date-time
      status:
        $ref: '#/definitions/PromoStatus'
  ActivatePromoBean:
    type: object
    required:
    - promoCode
    properties:
      promoCode:
        type: string
      businessId:
        type: string
      begins:
        type: string
        format: date-time
      expires:
        type: string
        format: date-time
  PromoStatus:
    type: string
    enum: [ ACTIVE, INACTIVE, PAUSED, DELETED, CANCELLED ]
  ErrorResponse:
    type: object
    properties:
      httpStatus:
        type: integer
      message:
        type: string
      developerMessage:
        type: string
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /promoManager/v1
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
basePath: /promoManager/v1